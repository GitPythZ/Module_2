def outer(x):
    def inner():
        nonlocal x # доступ к переменной x, без этого будет ошибка, потому что в этой локальной области видимости нет x
        x += 1
        return x
    return inner

a = outer(0) # начальное значение

print(a()) # в этом месте переменная x = 0, поэтому print выводит 1(0 + 1 = 1)
print(a()) # в этом месте переменная x = 1, поэтому print выводит 2(1 + 1 = 2)
print(a()) # в этом месте переменная x = 2, поэтому print выводит 3(2 + 1 = 3)

"""
Внутреняя функция inner увеличивает переданное число на единицу и возвращает результат
Внешняя функция возвращает внутреннюю функцию. Это значит, что в момент возврата функции
inner переменная x внутри ее тела равен 1. Когда происходит первый вызов функции и вывод результата, то
на экране мы видим именно эту единичку. 

Во время второго вызова переменная x всё еще равен
единичке, потому что старое значение нигде не обнуляется, поэтому результатом будет
1 + 1 = 2. 

Во время третьего вызова переменная x уже равен 2, поэтому после прибаления единички внутри
inner и вызова функции мы увидим на экране 3.

Чтобы убедиться в этом, можно сделать вот так
"""

def outer(x):
    def inner():
        nonlocal x
        x += 1
        inner.x = x
        return x
    return inner

x = 0
a = outer(x)

print("=" * 10)

print("Начальное значение переменной x:", x)

print()

print("Первый вызов функции a. Результат:", a())
print("Значение переменной x во время первого вызова функции a:", a.x)

print("-" * 10)

print("Второй вызов функции a. Результат:", a())
print("Значение переменной x во время второго вызова функции a:", a.x)

print("-" * 10)

print("Третий вызов функции a. Результат:", a())
print("Значение переменной x во время третьего вызова функции a:", a.x)

print()

print("Значение переменной x:", x)

# x = int(input())
# a = x % 10
# b = x // 10 % 10
# c = x // 100
# print(a + b + c)

# n = int(input())
# if n % 100 == 0:
#     print(n // 100)
# elif n % 20 == 0:
#     print(n // 20)
# elif n % 10 == 0:
#     print(n // 10)
# elif n % 5 == 0:
#     print(n // 5)
# else:
#     print(n % 10)

x = int(input())
a = x // 100
b = x % 100 // 20
c = x % 100 % 20 // 10
d = x % 100 % 20 % 10 // 5
e = x % 100 % 20 % 10 % 5 // 1
summa_ = a + b + c + d + e
print(summa_)
